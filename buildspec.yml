version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo Setting up task definition template...
      - cp taskdef.json.template taskdef.json
      - EXECUTION_ROLE_ARN=$(aws ecs describe-task-definition --task-definition python-app --query taskDefinition.executionRoleArn --output text)
      - echo "Execution Role ARN: $EXECUTION_ROLE_ARN"
      - sed -i "s|EXECUTION_ROLE_ARN|$EXECUTION_ROLE_ARN|g" taskdef.json
      # Don't replace IMAGE1_NAME here - CodeDeploy will handle it
  
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $ECR_REPOSITORY_URI:latest .
      - docker tag $ECR_REPOSITORY_URI:latest $ECR_REPOSITORY_URI:$IMAGE_TAG
  
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $ECR_REPOSITORY_URI:latest
      - docker push $ECR_REPOSITORY_URI:$IMAGE_TAG
      - echo "Final image URI: $ECR_REPOSITORY_URI:$IMAGE_TAG"
      - echo "Verifying artifacts..."
      - echo "--- appspec.yml ---"
      - cat appspec.yml
      - echo "--- taskdef.json ---"
      - cat taskdef.json
      - echo "Task definition should contain IMAGE1_NAME placeholder for CodeDeploy"
      - grep "IMAGE1_NAME" taskdef.json || echo "WARNING: IMAGE1_NAME placeholder not found!"

artifacts:
  files:
    - appspec.yml
    - taskdef.json